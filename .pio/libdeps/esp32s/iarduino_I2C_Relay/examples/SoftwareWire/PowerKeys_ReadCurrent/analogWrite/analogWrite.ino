// ДАННЫЙ ПРИМЕР ПОСТОЯННО МЕНЯЕТ СИГНАЛ ШИМ НА 3 КАНАЛЕ МОДУЛЯ:    // * Строки со звёздочкой являются необязательными.
// Требуется установить библиотеку <iarduino_I2C_Software.h>        //   https://iarduino.ru/file/627.html
                                                                    //
// Модуль силовых ключей 4N-канала 2А FLASH-I2C с измерением тока:  //   https://iarduino.ru/shop/Expansion-payments/power-key-4n-a-i2c.html
// Информация о модуле и описание библиотеки:                       //   https://wiki.iarduino.ru/page/power-key-4n-a-i2c/
                                                                    //
// Модуль силовых ключей 4P-канала 2А FLASH-I2C с измерением тока:  //   https://iarduino.ru/shop/Expansion-payments/power-key-4p-a-i2c.html
// Информация о модуле и описание библиотеки:                       //   https://wiki.iarduino.ru/page/power-key-4p-a-i2c/
                                                                    //
// Информация о подключении модулей к шине I2C:                     //   https://wiki.iarduino.ru/page/i2c_connection/
                                                                    //
#include <iarduino_I2C_Software.h>                                  //   Подключаем библиотеку для работы с программной шиной I2C, до подключения библиотеки iarduino_I2C_Relay.
SoftTwoWire sWire(3,4);                                             //   Создаём объект программной шины I2C указав выводы которым будет назначена роль линий: SDA, SCL.
                                                                    //
#include <iarduino_I2C_Relay.h>                                     //   Подключаем библиотеку для работы с реле и силовыми ключами.
iarduino_I2C_Relay pwrkey(0x09);                                    //   Объявляем объект pwrkey для работы с функциями и методами библиотеки iarduino_I2C_Relay, указывая адрес модуля на шине I2C.
                                                                    //   Если объявить объект без указания адреса (iarduino_I2C_Relay pwrkey;), то адрес будет найден автоматически.
double val = 2;                                                     //   Определяем начальное аналоговое значение.
bool   flg = 1;                                                     //   Определяем флаг приращения аналогового значения (0-убывает, 1-растёт).
                                                                    //
void setup(){                                                       //
//  Готовим модуль к работе:                                        //
    pwrkey.begin(&sWire);                                           //   Инициируем работу с модулем, указав ссылку на объект для работы с шиной I2C на которой находится модуль (по умолчанию &Wire).
    pwrkey.analogWrite(ALL_CHANNEL, 0);                             // * Отключаем все каналы.
}                                                                   //
                                                                    //
void loop(){                                                        //
    delay(10);                                                      //   Чем выше задержка, тем плавнее меняется аналоговый уровень.
    if(flg      ){val*=1.05;}else{val/=1.05;}                       //   Увеличиваем или уменьшаем аналоговое значение.
    if(val<=2   ){val = 2;    flg=1;}                               //   Меняем спад аналогового уровня на рост.
    if(val>=4095){val = 4095; flg=0;}                               //   Меняем рост аналогового уровня на спад.
                                                                    //
    pwrkey.analogWrite(3, val);                                     //   Устанавливаем на 3 канале модуля ШИМ с уровнем «val».
}                                                                   //   Допустимые значения ШИМ - от 0 до 4095.