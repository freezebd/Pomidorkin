// ДАННЫЙ ПРИМЕР ДЕМОНСТРИРУЕТ ЗАЩИТУ ОТ ЗАВИСАНИЯ ШИНЫ ИЛИ ARDUINO:   // * Строки со звёздочкой являются необязательными.
                                                                       //
// Модуль электромеханических реле на 2-канала FLASH-I2C:              //   https://iarduino.ru/shop/Expansion-payments/rele-2ch-i2c.html
// Информация о модуле и описание библиотеки:                          //   https://wiki.iarduino.ru/page/rele-2ch-i2c/
                                                                       //
// Модуль твердотельных реле на 4-канала FLASH-I2C:                    //   https://iarduino.ru/shop/Expansion-payments/solid-rele-4ch-i2c.html
// Информация о модуле и описание библиотеки:                          //   https://wiki.iarduino.ru/page/solid-rele-4ch-i2c/
                                                                       //
// Информация о подключении модулей к шине I2C:                        //   https://wiki.iarduino.ru/page/i2c_connection/
                                                                       //
#include <Wire.h>                                                      //   Подключаем библиотеку для работы с аппаратной шиной I2C, до подключения библиотеки iarduino_I2C_Relay.
#include <iarduino_I2C_Relay.h>                                        //   Подключаем библиотеку для работы с реле и силовыми ключами.
iarduino_I2C_Relay relay(0x09);                                        //   Объявляем объект relay для работы с функциями и методами библиотеки iarduino_I2C_Relay, указывая адрес модуля на шине I2C.
                                                                       //   Если объявить объект без указания адреса (iarduino_I2C_Relay relay;), то адрес будет найден автоматически.
void setup(){                                                          //
    Serial.begin(9600);                                                //   Инициируем передачу данных в монитор последовательного порта на скорости 9600 бит/сек.
    while(!Serial){;}                                                  // * Ждём завершения инициализации шины UART.
    delay(500);                                                        // * Ждём завершение переходных процессов связанных с подачей питания.
//  Готовим модуль к работе:                                           //
    relay.begin(&Wire); // &Wire1, &Wire2 ...                          //   Инициируем работу с модулем, указав ссылку на объект для работы с шиной I2C на которой находится модуль (по умолчанию &Wire).
    relay.enableWDT(5);                                                //   Разрешаем работу сторожевого таймера модуля, задав время до перезагрузки 5 сек.
}                                                                      //   Отключить работу сторожевого таймера модуля можно функцией disableWDT().
                                                                       //
void loop(){                                                           //
//  Переключаем 1 и 2 каналы модуля:                                   //
    relay.digitalWrite(1,HIGH); relay.digitalWrite(2,LOW); delay(500); //   Включаем 1 канал, выключаем 2 канал и ждём 500 мс.
    relay.digitalWrite(2,HIGH); relay.digitalWrite(1,LOW); delay(500); //   Включаем 2 канал, выключаем 1 канал и ждём 500 мс.
//  Сбрасываем (перезапускаем) сторожевой таймер модуля:               //
    relay.resetWDT();                                                  //   Теперь таймер модуля начнёт заново отсчитывать 5 секунд до перезагрузки.
//  Сообщаем, что сработал сторожевой таймер:                          // * 
    if( relay.getStateWDT() == false ){ Serial.println("ERROR"); }     // * Если таймер отключился, значит он досчитал до 0 и перезагрузил модуль отключив все его каналы.
}                                                                      //   Если модуль не отвечает (отключилась шина I2C), то функция getStateWDT() так же вернёт false.
                                                                       //
/*  *****************************************************************
    ПРИМЕЧАНИЕ:
    Время назначенное сторожевому таймеру функцией enableWDT(),             (в примере назначено 5 секунд)
    должно быть больше чем время между вызовами функции resetWDT().         (в примере функция resetWDT вызывается один раз в секунду)

    ПРОВЕРКА:
    Если во время работы отключить вывод SDA или SCL шины I2C, то реле
    перестанут переключаться, но одно из реле останется включённым.
    Подождав от 4 до 5 секунд, сработает таймер и все реле отключатся.      (время ожидания зависит от того, в каком месте выполнения кода был отключён вывод)
*/